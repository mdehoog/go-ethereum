// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package engine

import (
	"encoding/json"
	"errors"

	"github.com/ethereum/go-ethereum/common/hexutil"
)

// MarshalJSON marshals as JSON.
func (s StatelessWitnessV1) MarshalJSON() ([]byte, error) {
	type StatelessWitnessV1 struct {
		Headers []hexutil.Bytes `json:"headers" gencodec:"required"`
		Codes   []hexutil.Bytes `json:"codes"`
		State   []hexutil.Bytes `json:"state"`
	}
	var enc StatelessWitnessV1
	enc.Headers = s.Headers
	enc.Codes = s.Codes
	enc.State = s.State
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (s *StatelessWitnessV1) UnmarshalJSON(input []byte) error {
	type StatelessWitnessV1 struct {
		Headers []hexutil.Bytes `json:"headers" gencodec:"required"`
		Codes   []hexutil.Bytes `json:"codes"`
		State   []hexutil.Bytes `json:"state"`
	}
	var dec StatelessWitnessV1
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Headers == nil {
		return errors.New("missing required field 'headers' for StatelessWitnessV1")
	}
	s.Headers = dec.Headers
	if dec.Codes != nil {
		s.Codes = dec.Codes
	}
	if dec.State != nil {
		s.State = dec.State
	}
	return nil
}
